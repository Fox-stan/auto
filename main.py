
import asyncio
import os
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import (
    ApplicationBuilder,
    CallbackQueryHandler,
    ChatJoinRequestHandler,
    ContextTypes,
)
from flask import Flask
import threading

BOT_TOKEN = os.getenv("BOT_TOKEN")

# –ú–∏–Ω–∏ Flask-—Å–µ—Ä–≤–µ—Ä –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –æ—Ç UptimeRobot)
flask_app = Flask(__name__)

@flask_app.route('/')
def home():
    return "‚úÖ –ë–æ—Ç –ø—Ä–∞—Ü—é—î!"

def run_flask():
    flask_app.run(host="0.0.0.0", port=8080)

# === Telegram –ª–æ–≥–∏–∫–∞ ===
async def handle_join_request(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = update.chat_join_request.from_user
    chat_id = user.id
    username = user.first_name

    context.user_data["chat_id"] = chat_id
    context.user_data["username"] = username

    with open("2.jpeg", "rb") as img:
        message = await context.bot.send_photo(
            chat_id=chat_id,
            photo=img,
            caption=f"{username}, –ü—ñ–¥—Ç–≤–µ—Ä–¥—ñ—Ç—å —â–æ –≤–∏ –Ω–µ —Ä–æ–±–æ—Çü§ñ",
            reply_markup=InlineKeyboardMarkup([
                [InlineKeyboardButton("–ü—ñ–¥—Ç–≤–µ—Ä–¥–∏—Ç–∏ ‚úÖ", callback_data="verify")],
            ])
        )
    context.user_data["last_message_id"] = message.message_id

async def handle_button(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()

    chat_id = context.user_data.get("chat_id")
    username = context.user_data.get("username")

    if "last_message_id" in context.user_data:
        await context.bot.delete_message(chat_id=chat_id, message_id=context.user_data["last_message_id"])

    # 2 —Å–æ–æ–±—â–µ–Ω–∏–µ
    with open("1.jpeg", "rb") as img:
        message = await context.bot.send_photo(
            chat_id=chat_id,
            photo=img,
            caption=f"{username}, –£–í–ê–ì–ê‚ùóÔ∏è
–û–ë–û–í º–Ø–ó–ö–û–í–ê –ü–ï–†–ï–í–Ü–†–ö–ê!

üëá –ü—ñ–¥—Ç–≤–µ—Ä–¥—ñ—Ç—å, —â–æ –≤–∞–º —î 18 —Ä–æ–∫—ñ–≤?",
            reply_markup=InlineKeyboardMarkup([
                [InlineKeyboardButton("–ú–µ–Ω—ñ —î 18 ‚úÖ", url="https://t.me/YOUR_LINK")],
                [InlineKeyboardButton("–ú–µ–Ω—ñ –Ω–µ–º–∞—î 18 ‚ùå", url="https://t.me/YOUR_LINK")],
                [InlineKeyboardButton("–ü—Ä–æ–ø—É—Å—Ç–∏—Ç–∏", url="https://t.me/YOUR_LINK")],
            ])
        )
    await asyncio.sleep(3)

    # 3 —Å–æ–æ–±—â–µ–Ω–∏–µ
    message = await context.bot.send_message(chat_id=chat_id, text="–ó–∞–ø–∏—Ç –∑–Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –≤ –æ–±—Ä–æ–±—Ü—ñ...‚åõ")
    await asyncio.sleep(3)
    await context.bot.delete_message(chat_id=chat_id, message_id=message.message_id)

    # 4 —Å–æ–æ–±—â–µ–Ω–∏–µ
    with open("3.jpeg", "rb") as img:
        await context.bot.send_photo(
            chat_id=chat_id,
            photo=img,
            caption=f"{username}, –ü—Ä–æ—Å–∏–º–æ –≤–∞—Å –≤–∫–∞–∑–∞—Ç–∏ —Å–≤–æ—é —Å—Ç–∞—Ç—å!

‚ùó –û–±–µ—Ä—ñ—Ç—å —Å–≤–æ—é —Å—Ç–∞—Ç—å —Ç–∞ –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å –Ω–∞ –Ω–µ—ó ‚ùó",
            reply_markup=InlineKeyboardMarkup([
                [InlineKeyboardButton("–Ø –ñ–Ü–ù–ö–ê üë©", url="https://t.me/YOUR_LINK")],
                [InlineKeyboardButton("–Ø –ß–û–õ–û–í–Ü–ö üë®", url="https://t.me/YOUR_LINK")],
            ])
        )
    await asyncio.sleep(2)

    # 5 —Å–æ–æ–±—â–µ–Ω–∏–µ
    message = await context.bot.send_message(chat_id=chat_id, text="–£ –≤–∞—Å –∑–∞–ª–∏—à–∏–ª–æ—Å—å 10 —Å–µ–∫—É–Ω–¥ ‚òùÔ∏è")
    await asyncio.sleep(10)
    await context.bot.delete_message(chat_id=chat_id, message_id=message.message_id)

    # 6 —Å–æ–æ–±—â–µ–Ω–∏–µ
    with open("4.jpeg", "rb") as img:
        await context.bot.send_photo(
            chat_id=chat_id,
            photo=img,
            caption=f"{username}, –û–±–µ—Ä—ñ—Ç—å —Å–≤–æ—é –æ–±–ª–∞—Å—Ç—å!",
            reply_markup=InlineKeyboardMarkup([
                [InlineKeyboardButton("–°–•–Ü–î–ù–Ü –û–ë–õ–ê–°–¢–Ü", url="https://t.me/YOUR_LINK")],
                [InlineKeyboardButton("–¶–ï–ù–¢–†–ê–õ–¨–ù–Ü –û–ë–õ–ê–°–¢–Ü", url="https://t.me/YOUR_LINK")],
                [InlineKeyboardButton("–ó–ê–•–Ü–î–ù–Ü –û–ë–õ–ê–°–¢–Ü", url="https://t.me/YOUR_LINK")],
                [InlineKeyboardButton("‚Ä¢ –ü–Ü–î–í–ï–ù–ù–Ü –û–ë–õ–ê–°–¢–Ü", url="https://t.me/YOUR_LINK")],
                [InlineKeyboardButton("‚Ä¢ –ü–Ü–í–ù–Ü–ß–ù–Ü –û–ë–õ–ê–°–¢–Ü", url="https://t.me/YOUR_LINK")],
            ])
        )

    # 7 —Å–æ–æ–±—â–µ–Ω–∏–µ
    with open("5.jpeg", "rb") as img:
        await context.bot.send_photo(
            chat_id=chat_id,
            photo=img,
            caption=f"üîî {username}, –í–∞—à–∞ –∑–∞—è–≤–∫–∞ —Å—Ö–≤–∞–ª–µ–Ω–∞,
–¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–æ—Å—Ç—É–ø—É –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å ¬´–ü–Ü–î–¢–í–ï–†–î–ò–¢–ò¬ª",
            reply_markup=InlineKeyboardMarkup([
                [InlineKeyboardButton("–ü–Ü–î–¢–í–ï–†–î–ò–¢–ò ‚úÖ", url="https://t.me/YOUR_LINK")],
            ])
        )

def main():
    threading.Thread(target=run_flask).start()

    app = ApplicationBuilder().token(BOT_TOKEN).build()
    app.add_handler(ChatJoinRequestHandler(handle_join_request))
    app.add_handler(CallbackQueryHandler(handle_button))
    app.run_polling()

if __name__ == "__main__":
    main()
